import{j as l,r as m,s as p}from"./index-Wnh6dWoM.js";import{u}from"./useQuery-B6UjiVCc.js";import{S as f}from"./screen-DgWodc7J.js";import{T as y}from"./track-item-CQDXcbbc.js";import{u as d}from"./usePlaySong-COZezSEs.js";import"./useBaseQuery-Cyg4RAt3.js";import"./context-menu-bvpkuGZW.js";import"./smart-marquee-BJGb6MnY.js";import"./use-saved-playlists-CsMVwUus.js";import"./useInfiniteQuery-DDRs0Wm0.js";function g(i){const{timestamp:a=Date.now(),duplicates:o=!1}=i??{},{data:n,...s}=u({queryKey:["recently_played"],queryFn:()=>p.player.getRecentlyPlayedTracks(50,{type:"before",timestamp:a}),select:t=>t.items});return{tracks:m.useMemo(()=>{const t=n||[];if(o||t.length===0)return t;const c=[t[0]];for(let e=1;e<t.length;e++)t[e].track.id!==t[e-1].track.id&&c.push(t[e]);return c},[n,o]),...s}}function q(){const i=d(),{tracks:a,isLoading:o}=g({duplicates:!1}),n=(s,r)=>{const t=a.slice(Math.max(r-5,0),Math.min(r+5,a.length-1)).map(e=>e.track.uri),c=t.findIndex(e=>s.uri===e);i({uris:t,offset:c})};return l.jsx(f,{loading:o,children:a.map(({track:s},r)=>l.jsx(y,{trackNumber:r+1,track:s,onClick:()=>n(s,r)},r))})}export{q as default};
