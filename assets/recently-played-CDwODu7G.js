import{j as l,S as m,Q as u,r as p,s as f}from"./index-GPjUEH7w.js";import{u as y}from"./useQuery-Dr7AaTfI.js";import{T as d}from"./track-item-DUsgLxAy.js";import{u as g}from"./usePlaySong-gFjhZaD6.js";import"./useBaseQuery-AXD3SdH1.js";import"./context-menu-DzS64mVM.js";import"./smart-marquee-Ccq1Ni2i.js";import"./use-saved-playlists-BJ4W5u85.js";import"./useInfiniteQuery-w_hEMAlm.js";function k(i){const{timestamp:a=Date.now(),duplicates:o=!1}=i??{},{data:n,...s}=y({queryKey:[u.player.RECENTLY_PLAYED],queryFn:()=>f.player.getRecentlyPlayedTracks(50,{type:"before",timestamp:a}),select:t=>t.items});return{tracks:p.useMemo(()=>{const t=n||[];if(o||t.length===0)return t;const c=[t[0]];for(let e=1;e<t.length;e++)t[e].track.id!==t[e-1].track.id&&c.push(t[e]);return c},[n,o]),...s}}function L(){const i=g(),{tracks:a,isLoading:o}=k({duplicates:!1}),n=(s,r)=>{const t=a.slice(Math.max(r-5,0),Math.min(r+5,a.length-1)).map(e=>e.track.uri),c=t.findIndex(e=>s.uri===e);i({uris:t,offset:c})};return l.jsx(m,{loading:o,children:a.map(({track:s},r)=>l.jsx(d,{trackNumber:r+1,track:s,onClick:()=>n(s,r)},r))})}export{L as default};
